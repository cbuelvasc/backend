basePath: /api/yellow/v1
definitions:
  handler.APIError:
    properties:
      message:
        type: string
      path:
        type: string
      status:
        type: integer
      timestamp:
        type: integer
    type: object
  model.SignInInput:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  model.Tweet:
    properties:
      date:
        type: string
      id:
        type: string
      message:
        type: string
      userId:
        type: string
    required:
    - message
    - userId
    type: object
  model.TweetInput:
    properties:
      date:
        type: string
      message:
        type: string
      userId:
        type: string
    required:
    - message
    - userId
    type: object
  model.User:
    properties:
      avatar:
        type: string
      banner:
        type: string
      biography:
        type: string
      birthDate:
        type: string
      email:
        type: string
      id:
        type: string
      lastname:
        type: string
      location:
        type: string
      name:
        type: string
      password:
        type: string
      webSite:
        type: string
    required:
    - email
    - lastname
    - name
    type: object
  model.UserInput:
    properties:
      avatar:
        type: string
      banner:
        type: string
      biography:
        type: string
      birthDate:
        type: string
      email:
        type: string
      lastname:
        type: string
      location:
        type: string
      name:
        type: string
      password:
        type: string
      webSite:
        type: string
    required:
    - email
    - lastname
    - name
    type: object
info:
  contact: {}
  description: Provides access to the core features of Twitter REST API
  license:
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Twitter REST API
  version: "1.0"
paths:
  /signin:
    post:
      consumes:
      - application/json
      - text/xml
      description: Authenticate a user item
      parameters:
      - description: mediaType
        enum:
        - xml
        - json
        in: query
        name: mediaType
        type: string
      - description: SignIn
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.SignInInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.User'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.APIError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.APIError'
      summary: Authenticate User
      tags:
      - users
  /signup:
    post:
      consumes:
      - application/json
      - text/xml
      description: Create a new user item
      parameters:
      - description: mediaType
        enum:
        - json
        - xml
        in: query
        name: mediaType
        type: string
      - description: New User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.UserInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.APIError'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/handler.APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.APIError'
      summary: Create a user
      tags:
      - users
  /tweets:
    get:
      consumes:
      - application/json
      - text/xml
      description: Get all tweet items
      parameters:
      - description: mediaType
        enum:
        - xml
        - json
        in: query
        name: mediaType
        type: string
      - description: page
        in: query
        minimum: 1
        name: page
        type: integer
      - description: size
        in: query
        minimum: 1
        name: limit
        type: integer
      - description: userId
        in: query
        name: userId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Tweet'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.APIError'
      security:
      - ApiKeyAuth: []
      summary: Get all tweets
      tags:
      - tweets
    post:
      consumes:
      - application/json
      - text/xml
      description: Create a new tweet item
      parameters:
      - description: mediaType
        enum:
        - json
        - xml
        in: query
        name: mediaType
        type: string
      - description: New tweet
        in: body
        name: tweet
        required: true
        schema:
          $ref: '#/definitions/model.TweetInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Tweet'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.APIError'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/handler.APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.APIError'
      security:
      - ApiKeyAuth: []
      summary: Create a tweet
      tags:
      - tweets
  /tweets/{id}:
    delete:
      consumes:
      - application/json
      - text/xml
      description: Delete a new tweet item
      parameters:
      - description: mediaType
        enum:
        - json
        - xml
        in: query
        name: mediaType
        type: string
      - description: Tweet ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/model.Tweet'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.APIError'
      security:
      - ApiKeyAuth: []
      summary: Delete a tweet
      tags:
      - tweets
    get:
      consumes:
      - application/json
      - text/xml
      description: Get a tweet item
      parameters:
      - description: mediaType
        enum:
        - json
        - xml
        in: query
        name: mediaType
        type: string
      - description: Tweet ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Tweet'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.APIError'
      security:
      - ApiKeyAuth: []
      summary: Get a tweet
      tags:
      - tweets
  /users:
    get:
      consumes:
      - application/json
      - text/xml
      description: Get all user items
      parameters:
      - description: mediaType
        enum:
        - xml
        - json
        in: query
        name: mediaType
        type: string
      - description: page
        in: query
        minimum: 1
        name: page
        type: integer
      - description: size
        in: query
        minimum: 1
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.User'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.APIError'
      security:
      - ApiKeyAuth: []
      summary: Get all users
      tags:
      - users
  /users/{id}:
    delete:
      consumes:
      - application/json
      - text/xml
      description: Delete a new user item
      parameters:
      - description: mediaType
        enum:
        - json
        - xml
        in: query
        name: mediaType
        type: string
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/model.User'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.APIError'
      security:
      - ApiKeyAuth: []
      summary: Delete a user
      tags:
      - users
    get:
      consumes:
      - application/json
      - text/xml
      description: Get a user item
      parameters:
      - description: mediaType
        enum:
        - json
        - xml
        in: query
        name: mediaType
        type: string
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.APIError'
      security:
      - ApiKeyAuth: []
      summary: Get a user
      tags:
      - users
    put:
      consumes:
      - application/json
      - text/xml
      description: Update a user item
      parameters:
      - description: mediaType
        enum:
        - json
        - xml
        in: query
        name: mediaType
        type: string
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: User Info
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.UserInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.APIError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.APIError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.APIError'
      security:
      - ApiKeyAuth: []
      summary: Update a user
      tags:
      - users
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
